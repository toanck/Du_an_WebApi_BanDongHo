// <auto-generated />
using System;
using Assignment_NET104.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment_NET104.Migrations
{
    [DbContext(typeof(ShopWatchDbContext))]
    partial class ShopWatchDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment_NET104.Models.GioHang", b =>
                {
                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDung", "IdSp");

                    b.HasIndex("IdSp");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.HoaDon", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("IdNguoiDung");

                    

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("GiaTien")
                        .HasColumnType("int");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("Datetime");

                    b.Property<int>("SLMua")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdSanPham");

                    b.ToTable("HoaDonChiTiet", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.LoaiMay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenLoaiMay")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("LoaiMay", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("GioHangIdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GioHangIdSp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Idvaitro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("SDT")
                        .HasColumnType("int");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("VaiTroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VaiTroId");

                    b.HasIndex("GioHangIdNguoiDung", "GioHangIdSp");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.Nsx", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("TenNxs")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Nsx", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("GiaSanPham")
                        .HasColumnType("bigint");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdLoaiMay")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNsx")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdThuongHieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdXuatSu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MieuTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SlTon")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianBaoHanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiMay");

                    b.HasIndex("IdNsx");

                    b.HasIndex("IdThuongHieu");

                    b.HasIndex("IdXuatSu");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.SuatXu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("NoiXuatSu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SuatXu", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ThuongHieu", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.VaiTro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("MieuTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VaiTro", (string)null);
                });

            modelBuilder.Entity("Assignment_NET104.Models.GioHang", b =>
                {
                    b.HasOne("Assignment_NET104.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Assignment_NET104.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignment_NET104.Models.HoaDon", b =>
                {
                    b.HasOne("Assignment_NET104.Models.NguoiDung", "nguoiDung")
                        .WithMany()
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nguoiDung");
                });

            modelBuilder.Entity("Assignment_NET104.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("Assignment_NET104.Models.HoaDon", "HoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_NET104.Models.SanPham", "SanPham")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignment_NET104.Models.NguoiDung", b =>
                {
                    b.HasOne("Assignment_NET104.Models.VaiTro", "VaiTro")
                        .WithMany("nguoidung")
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_NET104.Models.GioHang", "GioHang")
                        .WithMany()
                        .HasForeignKey("GioHangIdNguoiDung", "GioHangIdSp");

                    b.Navigation("GioHang");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("Assignment_NET104.Models.SanPham", b =>
                {
                    b.HasOne("Assignment_NET104.Models.LoaiMay", "LoaiMays")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdLoaiMay")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Assignment_NET104.Models.Nsx", "Nsxes")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdNsx")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Assignment_NET104.Models.ThuongHieu", "ThuongHieus")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdThuongHieu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Assignment_NET104.Models.SuatXu", "SuatXus")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdXuatSu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoaiMays");

                    b.Navigation("Nsxes");

                    b.Navigation("SuatXus");

                    b.Navigation("ThuongHieus");
                });

            modelBuilder.Entity("Assignment_NET104.Models.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("Assignment_NET104.Models.LoaiMay", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Assignment_NET104.Models.NguoiDung", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Assignment_NET104.Models.Nsx", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Assignment_NET104.Models.SanPham", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("Assignment_NET104.Models.SuatXu", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Assignment_NET104.Models.ThuongHieu", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Assignment_NET104.Models.VaiTro", b =>
                {
                    b.Navigation("nguoidung");
                });
#pragma warning restore 612, 618
        }
    }
}
